

1、请解释内存溢出和内存泄漏

    内存溢出是指已有的数据超过了其获得到内存所能储存的范围，比如用一个字节存放1000，这个数据就属于内存溢出

    内存泄漏是指由于程序错误或者漏洞造成内存占用太多，或者占用内存后无法释放（绝大部分时申请了内存但是没有释放）
    

2、数据库中索引，主键，唯一索引，联合索引的区别，对数据库性能有什么影响

    索引时一种特殊文件，他包含对数据库中表里所有记录的引用指针

    普通索引的唯一作用是加快访问数据

    普通索引，被索引的数据中可以包含重复的数据，唯一索引就是规定了索引到的值各不相同

    逐渐是一种特殊的唯一索引，一个表只允许有一个主键，用来唯一标识一条记录

    联合索引就是索引可以覆盖多个数据列

    索引加快了查询数据，但是减慢了添加删除更新的数据，因为在这些操作之前需要先索引


3、数据库中内连接和外连接的区别

    内连接：指连接结果仅仅包含符合链接条件的行，参与链接的两个表都应该符合链接条件

    外连接：链接结果不仅包含符合链接条件的行同时也包含自身不符合条件的行，包括左外连接和右外连接海还有全连接

    内连接只能查询到两个表中关系匹配的记录
    外连接不仅能查询两个表中关系匹配的记录，而且可以查询不匹配的记录


4、线程和进程，多线程中死锁怎么处理

    联系：
    一个线程只属于一个进程，一个进程可以拥有多个线程，当至少有个线程，称为主线程。
    资源统一分配给进程，同一进程中的线程共享该进程所有资源
    线程在执行过程中，需要协作同步，不同进程之间线程需要通过消息通信来达到同步。

    区别：
    线程作为调度和分配的基本单位，进程作为分配支援的基本单位
    并发性:不仅线程之间可以并发执行，同一进程中的不同线程之间也能进行并发执行
    拥有支援：进程拥有的资源是独立单位，线程不拥有资源，但是可以访问隶属于进程的所有资源。

    什么时候开始使用多线程
    耗时或者大量占用处理器阻塞用户界面操作
    各个任务必须等待外部资源时

    避免多线程中死锁
    加锁顺序，线程按照一定的顺序加锁
    加锁时限，线程尝试获取锁的时候加上一定的时限，超过事件则放弃对该锁的请求，并释放自己占有的锁
    死锁检测


5、TCP和UDP区别

    TCP面向连接(如打电话要先建立拨号连接)；UDP时无连接的，发送数据前不需要建立连接
    UDP结构程序简单
    TCP对系统资源的要求多，UDP少
    TCP保证了数据的正确性，UDP可能丢包；
    TCP保证数据顺序，UDP不保证
    流模式，数据报模式


6、css有哪些选择器，如何去区分优先级

    派生选择器(用HTML标签声明)
    id选择器(用DOM的ID声明)
    类选择器(用一个样式类名声明)

    除了上面3种基本选择器，还有一个扩展选择器
    后代选择器(利用空格间隔 div .a{})
    群组选择器(利用都好间隔  p,div,#a{})

    css选择器的优先级定义
    基本原则： 一般而言，选择器越特殊，他的优先级越高，也就是选择器的指向越准确，他的优先级就越高

    复杂的计算方法：
        用1表示派生类的优先级
        用10表示类选择器优先级
        用100表示ID选择器的优先级